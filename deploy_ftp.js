import ftp from 'basic-ftp';
import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
dotenv.config();

async function copyFilesToDist() {
    console.log('üì¶ Copying files to dist directory...');
    
    const distDir = './dist';
    
    // –°–æ–∑–¥–∞–µ–º dist –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!fs.existsSync(distDir)) {
        fs.mkdirSync(distDir, { recursive: true });
    }
    
    // –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    const mainFiles = [
        'index.html',
        'styles.css', 
        'script.js',
        'send-email.php'
    ];
    
    // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    for (const file of mainFiles) {
        if (fs.existsSync(file)) {
            fs.copyFileSync(file, path.join(distDir, file));
            console.log(`‚úÖ Copied ${file}`);
        }
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏ (fonts, images, icons)
    const directories = ['fonts', 'images', 'icons'];
    
    for (const dir of directories) {
        if (fs.existsSync(dir)) {
            copyDirRecursive(dir, path.join(distDir, dir));
            console.log(`‚úÖ Copied directory ${dir}`);
        }
    }
    
    console.log('‚úÖ All files copied to dist successfully!');
}

function copyDirRecursive(src, dest) {
    if (!fs.existsSync(dest)) {
        fs.mkdirSync(dest, { recursive: true });
    }
    
    const entries = fs.readdirSync(src, { withFileTypes: true });
    
    for (const entry of entries) {
        const srcPath = path.join(src, entry.name);
        const destPath = path.join(dest, entry.name);
        
        if (entry.isDirectory()) {
            copyDirRecursive(srcPath, destPath);
        } else {
            fs.copyFileSync(srcPath, destPath);
        }
    }
}

async function deployToFTP() {
    const client = new ftp.Client();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
    client.ftp.verbose = true;
    
    try {
        console.log('üöÄ Starting FTP deployment...');
        
        // –°–Ω–∞—á–∞–ª–∞ –∫–æ–ø–∏—Ä—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ dist
        await copyFilesToDist();
        
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FTP —Å–µ—Ä–≤–µ—Ä—É
        await client.access({
            host: process.env.FTP_HOST,
            port: parseInt(process.env.FTP_PORT) || 21,
            user: process.env.FTP_USER,
            password: process.env.FTP_PASSWORD,
            secure: process.env.FTP_SECURE === 'true'
        });
        
        console.log('‚úÖ Connected to FTP server:', process.env.FTP_HOST);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        const localPath = process.env.FTP_LOCAL_PATH || './dist';
        const remotePath = process.env.FTP_REMOTE_PATH || '/public_html/';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞
        if (!fs.existsSync(localPath)) {
            throw new Error(`Local directory ${localPath} does not exist. Did you run build command?`);
        }
        
        console.log(`üìÅ Uploading from: ${localPath}`);
        console.log(`üìÅ Uploading to: ${remotePath}`);
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —É–¥–∞–ª–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        await client.ensureDir(remotePath);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
        await client.uploadFromDir(localPath, remotePath);
        
        console.log('üéâ Deployment completed successfully!');
        console.log(`üåê Your site should be available at: ${process.env.SITE_URL || 'your-website.com'}`);
        
    } catch (error) {
        console.error('‚ùå Deployment failed:', error.message);
        process.exit(1);
    } finally {
        client.close();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
deployToFTP();